import{j as s}from"./index-BoVdQYxW.js";import{G as l}from"./GithubUpdateInfo-WqlH7gfR.js";import{D as e}from"./DetailsSummary-D2nbBOKm.js";import{C as r,v as a,c as n,a as x}from"./CodeSnippet-Bs8lCTTb.js";import{b as c,A as i}from"./Footer-C5ddbXMU.js";const m=()=>s.jsxs("div",{className:"faq-content",children:[s.jsx(l,{filePath:"src/pages/sections/aeexprfaq/Base.tsx"}),s.jsxs(e,{title:"Что такое переменные и константы? Какие типы данных они могут принимать?",children:[s.jsx("p",{children:"В программировании есть понятие переменной. Это какое-либо значение с определенным именем. В переменную можно записать число, строку, значение контроллера, массив, булево значение (True или False), результат какой-нибудь функции или что вам душе угодно."}),s.jsxs("ul",{children:[s.jsxs("li",{children:["У ",s.jsx("mark",{children:"переменной"})," значение может меняться когда угодно - с помощью контроллера, функции или различных условий. Изменяемая переменная обозначается как ",s.jsx("mark",{children:"var"})," или ",s.jsx("mark",{children:"let"}),".",s.jsxs(c,{children:["Основное отличие между ",s.jsx("mark",{children:"var"})," и ",s.jsx("mark",{children:"let"})," - это область видимости. Также переменная ",s.jsx("mark",{children:"let"})," с одинаковым названием не может быть вновь объявлена в одной и той же области видимости, когда же переменная с типом ",s.jsx("mark",{children:"var"})," позволит это сделать."]})]}),s.jsxs("li",{children:["У ",s.jsx("mark",{children:"константой переменной"})," или же ",s.jsx("mark",{children:"константы"})," значение не может изменяться. Такая переменная обозначается как ",s.jsx("mark",{children:"const"}),", её нельзя перезаписать или изменить во время работы выражения. Это может быть какое-нибудь значение из физики или математики, например число Пи или гравитационное ускорение.",s.jsxs(i,{children:["При помощи ",s.jsx("mark",{children:"const"})," нельзя объявлять переменную без его значения, иначе выбьет ошибку."]})]})]}),s.jsx("p",{children:"Чтобы задать переменную - достаточно придумать ей название, поставить знак равно и указать его значение."}),s.jsx(r,{language:"javascript",children:a}),s.jsxs("p",{children:["Чтобы задать константу, или же неизменяемую переменную - нужно перед названием переменной задать тип данных ",s.jsx("mark",{children:"const"}),". Это позволит языку выражений понять, что данное значение перезаписывать не следует и будет выводить ошибку при попытке его перезаписи."]}),s.jsx(r,{language:"javascript",children:n})]}),s.jsx(e,{title:"Как вывести результат выражения?",children:s.jsxs("p",{children:["Обычно в языке выражений в ",s.jsx("mark",{className:"app",children:"After Effects"})," результат определяется последней выполненной строкой. Здесь нельзя задать какое-либо значение в любом месте кода с помощью ",s.jsx("mark",{className:"code",children:"return"})," или чего-то подобного."]})}),s.jsxs(e,{title:"Как правильно называть переменные?",children:[s.jsx("p",{children:"Для имени переменной можно использовать любую букву латинского алфавита и цифры. В некоторых случаях можно применять символы подчеркивания и знак доллара."}),s.jsxs("p",{children:["В переменной должны быть только буквы латинского алфавита и цифры. Переменная"," ",s.jsx("b",{children:s.jsx("u",{children:"не должна"})})," ","начинаться с цифры. Также для переменной"," ",s.jsx("b",{children:s.jsx("u",{children:"нельзя использовать"})})," ","названия встроенных функций и типов данных."]}),s.jsx(r,{language:"javascript",children:x}),s.jsx("p",{children:"По стилю написания названий переменных ограничений нет, но лучше уж следовать стандартной методике написания, по типу CamelCase или Snake_Case. Это позволит лучше читать код вашего выражения."}),s.jsxs(i,{children:["В ",s.jsx("mark",{children:"ExtendScript"})," нельзя использовать метод написания переменных CamelCase."]})]}),s.jsx(e,{title:"Какие типы данных я могу задать для переменных?",children:s.jsx("p",{})}),s.jsx(e,{title:"Какие есть стандартные функции в выражениях?",children:s.jsx("p",{})}),s.jsx(e,{title:"Какие есть атрибуты и методы для работы с композициями и слоями?",children:s.jsx("p",{})}),s.jsx(e,{title:"Как создать собственную функцию и использовать его?",children:s.jsx("p",{})}),s.jsx(e,{title:"Что такое конструкция условий? Для чего нужен if, else?",children:s.jsx("p",{})}),s.jsxs(e,{title:"Какие математические выражения я могу использовать?",children:[s.jsx("p",{children:"С помощью языка выражений вы можете выполнять стандартные арифметические выражения, например сложение и вычитание, умножение и деление."}),s.jsx("p",{children:"Для начала зададим две простые переменные, внутри которых будут храниться число."}),s.jsx(r,{language:"javascript",children:"x = 100 y = 50"}),s.jsx("p",{children:"После того, как мы задали переменные - мы можем с ними взаимодействовать и даже записывать результат математических операций в новые переменные."}),s.jsx(r,{language:"javascript",children:"x + y x - yx * y z = x / y"}),s.jsxs("p",{children:["Помимо стандартных математических операций, которые мы знаем со школьных времён, существуют и математические функции, как ",s.jsx("mark",{children:"Math.round"})," или"," ",s.jsx("mark",{children:"Math.floor"}),"."]})]}),s.jsx(e,{title:"Что такое комментарии и для чего они нужны?",children:s.jsx("p",{children:"Комментарии - это не обязательная вещь при написании выражений. Но комментарии могут пригодиться при объяснении того или иного поведения в вашей инструкции другому пользователю или даже себе из будущего."})}),s.jsx(e,{title:"Как отформатировать текст или число?",children:s.jsx("p",{})}),s.jsx(e,{title:"Зачем нужен seedRandom?",children:s.jsx("p",{})})]});export{m as default};
